#ifndef SMC_MODEL_CLHPP
#define SMC_MODEL_CLHPP
namespace SMC{

template <typename Derived>
struct Model
{
    //Should integrate the state & update particle weight
    void advance(const long &lTime, float* X, const float *param)
    {
        static_cast<Derived*>(this)->Step(lTime, X, param);
    }

    //Update the parameter proposal:
    void ProposalSample(const float* param_prop, float* res)
    {
        static_cast<Derived*>(this)->ProposalSample(param_prop, res);
    }
    //Likelihood required for particle weight updates
    float LogLikelihood(const float *state, const size_t &N)
    {
        return static_cast<Derived*>(this)->LogLikelihood(state, N);
    }
    void reset_particles(float* state)
    {
        static_cast<Derived*>(this)->reset_particles(state);
    }
};
}


#endif